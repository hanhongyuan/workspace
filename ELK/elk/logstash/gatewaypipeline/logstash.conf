input {
  file {
    type => "gateway"
    path => ["/sjfxlogs/back-gateway*.log","/sjfxlogs/back-wxgwgateway*.log","/sjfxlogs/back-erpgwgateway*.log"]
    codec => multiline {
            pattern => "^BEGIN"
            negate => true
            what => "previous"
  	        }
    }
  file {
      type => "gatewayjson"
      path => ["/sjfxlogs/gateway-ison*.log","/sjfxlogs/wxgwgateway-json*.log","/sjfxlogs/erpgwgateway-json*.log"]
    }
}

filter {

    grok{
      match => {
            "message" => "^BEGIN\s%{SYSLOG5424SD:request_id}\s%{NOTSPACE:microservice}\s*%{TIMESTAMP_ISO8601:time}\s*%{SYSLOG5424SD:thread}\s*%{LOGLEVEL:level}\s*%{NOTSPACE:menthod}\s*'\[%{URIHOST:http_request_ip}\]\[%{NOTSPACE:http_request_service}\]\[%{URIPATH:http_request_path}\]\[%{NOTSPACE:http_respons_status}\]\[%{NUMBER:http_request_time:int}\]"
        }
      match => {
            "message" => "^BEGIN\s%{SYSLOG5424SD:request_id}\s*%{NOTSPACE:microservice}\s*%{TIMESTAMP_ISO8601:time}\s*%{SYSLOG5424SD:thread}\s*%{LOGLEVEL:level}\s*%{NOTSPACE:menthod}\s*'\[%{URIHOST:http_request_ip}\]\[%{WORD:req_type}\]\[%{NOTSPACE:http_request_service}\]\[%{WORD:http_menthod}\]\[%{URIPATH:http_request_path}\]"
        }
    }
    
    mutate {
      convert => { "cost" => "integer" }
    }
    
    date {
      match => ["time","yyyy-MM-dd HH:mm:ss.SSS","UNIX"]
      target => "time"
      locale => "cn"
    }
}


output {
	elasticsearch {
		hosts => ["172.16.250.149:9200"]
		index => "%{type}-%{+YY-w}"
        document_type => "logs"
        codec=>"json"
		user => elastic
		password => E7rHbFbWXxLWY9Bj
	}
}